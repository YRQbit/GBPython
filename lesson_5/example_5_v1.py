# Задание-5.
#
# Описание:
# Создать (программно) текстовый файл, записать в него программно набор чисел,
# разделенных пробелами.
# Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
#

""
import os # импортируем модуль
from functools import reduce #  импортируем функцию из модуля

"""
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
ВАРИАНТ-1
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
"""


def file_creator(file_path,file_name):
    """" Функция-1 "Создание и\или изменение файла" """

    if not os.path.exists(path2file):
        # если директория в указанной локации отсутствует
        # .
        os.mkdir(path2file)
            # указываем путь для размещения директории и название самой директории
            # в качестве аргумента функции создания директории == mkdir == из модуля == os ==
            # .
        print("Директория создана")
    else:
        print("Создание директории не требуется")

    if os.path.exists(file_path + file_name):
        print("ФАЙЛ УЖЕ СОЗДАН")

        print("<>"*25)
        print("Перезаписать существующий файл [1]: ")
        print("Удалить существующий файл [2]: ")
        print("Продолжить без изменений [3]: ")
        usr_res = input("<><><><><><><> Выберите действие: ")
        print("")

        if usr_res == '1':
            print("ВНИМАНИЕ! ВСЕ ДАННЫЕ БУДУТ БЕЗВОЗВРАТНО УДАЛЕНЫ!")
            usr_res = input("Подтвердить [Д\н]: ")
            if str(usr_res).lower() in list("д,да,yes,y"):
                file_create = open(file_path + file_name,"w")
                    # создаем файл и открываем на чтение
                    # .
                file_create.close()
                    # закрываем файл
                    # .
                print(f"Файл {file_create.name} перезаписан...")
        elif usr_res == '2':
            os.remove(file_path + file_name)
                # удаляем файл
                # .
            print(f"Файл {os.path.basename(file_path + file_name)} удален...")
                # выводим в консоль наименование и полный путь до файла
                # .
        elif usr_res == '3': return
            # в случае выбора продолжения, завершаем работу
            # Функции-1 "Создание и\или изменение файла"
            # .
        else:
            print("Завершение работы file_creator(file_path,file_name) ...")
            exit()
    else:
        file_create = open(file_path + file_name, "w")
        file_create.close()
        print(f"Файл {file_create.name} создан!")
    return

path2file = r'./less5_test_files'
name4file = r"/lesson_test_5.txt"
file_creator(file_path = path2file, file_name = name4file)
    # выполняем вызов Функции-1 "Создание и\или изменение файла"
    # в качестве именованных аргументов, передаем значения переменных
    # с локацией и именем файла для его дальнейшей обработки
    # .

usr_numbers = input("Введите набор чисел через пробел: ")
    # в консоли запрашиваем у пользователя ввод данных

if usr_numbers.replace(' ','').isdigit():
    # в случае, когда после удаления пробелов, строка содержит только цифры,
    # тогда выполняем блок кода if

    usr_numbers_v1 = list(map(int, usr_numbers.split()))
        # создаем объект Списка, в котором размещаем полученные
        # после предварительного преобразования в int-тип значения
        # из Списка == usr_numbers.split() ==
    print(reduce(lambda x, y: x + y, usr_numbers_v1))
        # выполняем поэлементное присваивание значений из Списка == usr_numbers_v1 ==
        # в лямбда-функцию для суммирования, после чего выводим результат в консоль

    with open(path2file + name4file,"w+",encoding="utf-8") as file_str:
        # создаем файл с именем из == name4file== в локации со значением из == path2file ==
        # в режиме == w+ == и получаем доступ через объект == file_str ==
        print(usr_numbers, file = file_str)
            # размещаем Строку == usr_numbers ==, со значениями
            # полученными от пользователя в файле
            # .
        file_str.seek(0)
            # переводим файловый курсор в начало файла
            # .
        line_file = file_str.read()
            # используем возможность режима "w+"
            # и получаем данные в Строку
            # .
        line_file = line_file.replace('\n','').split()
            # удалем все "лишнее" из строки и разбиваем
            # по разделителю "пробел", с размещением в Списке
            # .
        print(f"Количество чисел в файле: {len(line_file)}")

else:
    print("Ошибка! Строка содержит не числовые символы")
