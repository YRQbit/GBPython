# Задание-5.
#
# Описание:
# Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме
# и после этого завершить программу.
#
#
# Ожидаемый результат:
# Пользователь запускает на выполнение Python-скрипт
# Python выводит в консоль запрос на ввод произвольного количества чисел в строке через пробел
# Пользователь вводит несколько чисел (например: 5 5 5 5)
# Python суммируем полученные числа
# Python выводит в консоль результат суммирования (из примера: 20)
# Python выводит в консоль запрос на повторный ввод
# Пользователь соглашается.
# Python выводит в консоль запрос на ввод произвольного количества чисел в строке через пробел
# Пользователь вводит несколько чисел (например: 5 5 5)
# Python суммирует текущие значения с полученным ранее результатом вычислений
# Python выводит в консоль полученный результат (из пример: 35)
# Python выводит в консоль запрос на ввод произвольного количества чисел в строке через пробел
# Python выводит в консоль запрос на ввод произвольного количества чисел в строке через пробел
# Пользователь вводит несколько чисел (например: 5 R 5)
# Python суммирует текущие значения до первого НЕ числового символа с полученным ранее результатом вычислений
# Python выводит в консоль полученный результат (из пример: 40)
# Python выводит в консоль запрос на ввод произвольного количества чисел в строке через пробел
# Пользователь отказывается от продолжения ввода
#
# .


def YN_quest():
    """Функция-3 "Запрос на продолжение ввода".
    Функция выполняет:
        - запрос на повторный ввод данных: "Повторить попытку ввода? (Да \ Нет): "
        - проверку ввода допустимых символов: "yes", "y", "Да", "д"
        - в случае, когда указанный символ не совпадает с допустимым, функция завершает работу скрипта"""

    YN_yes = [ "yes", "y", "Да", "д" ]
    print("")
    YN = input("Повторить попытку ввода? (Да \ Нет): ")
    print("")
    if str(YN).lower() not in YN_yes:
        # переводим полученные от пользователя символы в формат прописных
        # проверяем наличие этих символов в Списке допустимых символов == YN_yes ==
        # в случае, когда допустимые символы отсутствуют, завершаем выполнение скрипта
        exit()

""
"""
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
ВАРИАНТ-1
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
"""
#
# int_list = []
# while True:
#     var_val = input("Введите числа через пробел: ").split()
#     try:
#         for index, val_list in enumerate(var_val):
#             int_list.append(int(val_list))
#         print(sum(int_list))
#         YN_quest()
#
#     except (ValueError):
#         print(sum(int_list))
#         YN_quest()
#


""
"""
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
ВАРИАНТ-2
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
 Применение решения list(map(int, var_val))
"""

int_list_v1 = [] # создаем пустой объект Списка
while True: # Создаем бесконечный цикл
    var_val = input("Введите числа через пробел: ").split()
        # Получаем строку от пользователя и создаем,
        # по разделителю "пробел", объект Списка с набором элементов,
        # в значении которых размещены символы разделенные пробелом при вводе

    try: # запускаем проверку исключений

        var_val = list(map(int, var_val)) # меняем тип значений в Списке (сейчас они строкового типа), ошибку обрабатываем в блоке == except ==

        for index, val_list in enumerate(var_val): # методом перебора получаем значение каждого элемента

            int_list_v1.append(val_list) # добавляем каждый полученный элемент из Списка == var_val ==(он обновляется на каждой итерации) в новом списке == int_list_v1 == (накапливает значения)

        print("Сумма чисел: ",sum(int_list_v1)) # Выполняем суммирование значений элементов в списке
        YN_quest() # Вызываем пользовательскую функцию "Запрос на продолжение ввода"

    except (ValueError): # Обрабатываем исключение по ошибке типа "ValueError"

        for k, val_list in enumerate(var_val): # перебираем значения в Списке == var_val ==

            if val_list.isnumeric() : # В случае, когда значение совпадает с цифрой, тогда выполняем код блока == if ==

                int_list_v1.append(int(val_list)) # Добавляем в новый элемент Списка целочисленное значение, полученное из списка == var_val ==

        print("Сумма чисел: ", sum(int_list_v1)) # Выполняем суммирование значений элементов Списка и выводим резултат в консоль
        YN_quest() # Вызываем пользовательскую функцию "Запрос на продолжение ввода"

