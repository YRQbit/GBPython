# Задание-4.
#
# Описание:
# Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
#
# ** Подсказка:** попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
#
#
# Ожидаемый результат:
# 1. Пользователь запускает Python-скрипт на выполнение
# 2. Python выводит в консоль запрос на ввод первого значения (число а)
# 3. Пользователь вводит положительное целое число
# 4. Python выводит в консоль запрос на ввод второго (отрицательного\положительного) целого значения (число b)
# 5. Пользователь вводит отрицательное целое число
# 6. Python выполняет возведение "а" в степень "b"
# 7. Python выводит в консоль результат вычислений
# 8. Python завершает выполнение кода
#


var_val = var_def = int(input("Введите целое число: ")) # 3
var_step = int(input("Введите целое отрицательное число (степень): ")) # -4


""
"""
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
ВАРИАНТ-1
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
 Решение через:
 встроенную функцию возведения числа в степень
"""

print(var_val**var_step)

""
"""
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
ВАРИАНТ-2
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
 Решение через:
 размещение полученных значений в Списке val_list.append(var_val)
 с последующим перемножением
"""


#print(abs(var_step))

# val_list = [var_val]
# s=2
# while True:
#     if abs(var_step) >= s:
#         var_val = var_val * var_def # умножение текущего значения на начальное и замена в переменной текущего значения полученным
#         val_list.append(var_val) # размещаем полученное значение в новом элементе Списка
#         if s == abs(var_step) and var_step > 0 : # в случае когда количество перемноженных элементов равно значению степени, выполняем код блока if
#             print("val_list[s-1]",val_list[s-1]) #  выводим значение последнего полученного элемента
#             break
#         s += 1 # активируем счетчик
#     elif var_step < 0:
#         print(1/val_list[abs(var_step)-1]) # возведение в отрицательную степень
#         break

#print(val_list)

""
"""
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
ВАРИАНТ-3
<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
 Решение через:
 result *= var_val
 и
 if var_step < 0 and var_val >= 0:
"""



def my_func(x, y):
    """ Функция-1 "Возведение числа в степень"
    Функция выполняет:
        - получение обязательных позиционных параметров
        - получение значения переменной == var_step == из основной ветки кода
        - возведение в степень методом умножения полученного значения на текущее, с перезаписью полученного значения в переменной
        - проверку признака отрицательной степени в полученном от пользователя значении
        - вывод в консоль полученных результатов"""

    result=1
    for k in range(0,abs(var_step)):
        result *= var_val

        if var_step < 0 and var_val >= 0:
            res = 1/result
        elif var_val >= 0:
            res = result

    return res

print(my_func(var_val,var_step))
    # Вызов Функции-1 "Возведение в степень" с позиционными аргументами
    # Вывод в консоль результатов работы Функции-1
