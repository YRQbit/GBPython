# Задание-5
#
# Описание:
# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
#
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
#
#
# Ожидаемый результат:
#
# 1. Python выводит в консоль текущий список значений рейтинга >> 7, 5, 3, 3, 2 << в представленном формате
# 1. Python выводит в консоль приглашения на ввод := "Укажите значение в баллах от 0 до 1000:  ";
# 2. Пользователь вводит произвольное числовое значение;
# 3. Python размещает полученное значение в Списке элементов "Рейтинга", соблюдая
#   следующие условия:
#   - в случае, когда полученное значение уже существует в списке значений "Рейтинга,
#       тогда Python должен разместить такое значение за существующим значением в списке рейтинга
#   - в случае, когда полученное значение больше максимального значения в "Рейтинге",
#       тогда Python должен разместить такое значение в начале списка рейтинга
#   - в случае, когда полученное значение меньше минимального значения в "Рейтинге",
#       тогда Python должен разместить такое значение в конце списка рейтинга;
# 4. Python выводит в консоль список значений рейтинга
# 5. Python завершает выполнение кода;
#
# Пример:
#   - Python ==>> Текущие значения рейтинга: 7, 5, 3, 3, 2
#   - Python ==>> Укажите значение в баллах от 0 до 1000:
#   - Пользователь вводит ==>> 1
#   - Python ==>> Текущие значения рейтинга: 7, 5, 3, 3, 2, 1
#
#   - Python ==>> Текущие значения рейтинга: 7, 5, 3, 3, 2
#   - Python ==>> Укажите значение в баллах от 0 до 1000:
#   - Пользователь вводит ==>> 8
#   - Python ==>> Текущие значения рейтинга: 8, 7, 5, 3, 3, 2
#
#   - Python ==>> Текущие значения рейтинга: 7, 5, 3, 3, 2
#   - Python ==>> Укажите значение в баллах от 0 до 1000:
#   - Пользователь вводит ==>> 3
#   - Python ==>> Текущие значения рейтинга: 7, 5, 3, 3, 3, 2
#
#   - Python ==>> Текущие значения рейтинга: 7, 5, 3, 3, 2
#   - Python ==>> Укажите значение в баллах от 0 до 1000:
#   - Пользователь вводит ==>> 1000
#   - Python ==>> Текущие значения рейтинга: 1000, 7, 5, 3, 3, 2
#
# Задачи:
# 1. Сформировать Список значений Рейтинга, с определенным набором значений ==>> 7, 5, 3, 3, 2 <<==;
# 2. Вывести в консоль список текущих значений рейтинга: "Текущие значения рейтинга: 7, 5, 3, 3, 2";
# 3. Вывести в консоль запрос на ввод произвольной значения рейтинга: "Укажите значение в баллах от 0 до 1000:  ";
# 4. Разместить полученное значение в Списке значений Рейтинга;
# 5. Упорядочить список значений с учетом обозначенных условий:
#   - в случае, когда полученное значение уже существует в списке значений Рейтинга,
#       тогда Python должен разместить такое значение за существующим значением в списке рейтинга
#   - в случае, когда полученное значение больше максимального значения в Рейтинге,
#       тогда Python должен разместить такое значение в начале списка Рейтинга
#   - в случае, когда полученное значение меньше минимального значения в Рейтинге,
#       тогда Python должен разместить такое значение в конце списка Рейтинга;
# 6. Отформатировать вывод значений списка, аналогично предоставленному примеру ==>> 7, 5, 3, 3, 2 <<==;
# 7. Вывести в консоль список упорядоченный в соответствии с обозначенными выше уловиями;
#

my_list = [7, 5, 3, 3, 2]

score = int(input("Укажите значение в баллах от 0 до 1000: "))

my_list.append(score)
my_list.sort(reverse=True)
print(f"Список балов рейтинге: {str(my_list).strip('[]')}")