# Задание-6
#
# Описание:
# *Реализовать структуру данных «Товары».
# Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#
#
# Пример готовой структуры:
#
# [
#       (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#       (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#       (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
#
#
# Необходимо собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
# а значение — список значений-характеристик, например список названий товаров.
#
# Пример:
#
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }
#
#
# Ожидаемый результат:
#
# 1. Python запрашивает ввод значений (номер товара, название товара, цена товара, количество товара, единица измерения);
# 2. Пользователь вводит соответствующие значения;
# 3. Python сохраняет товарную позицию с ее характеристиками в структуре "Товары"
# 4. Python запрашивает продолжение ввода;
# 5. Пользователь подтверждает продолжение ввода;
# 6. Python запрашивает ввод значений (номер товара, название товара, цена товара, количество товара, единица измерения);
# 7. Пользователь вводит данные по новой товарной позиции;
# 8. Python сохраняет товарную позицию с ее характеристиками в своей структуре "Товары";
# 9. Python запрашивает продолжение ввода;
# 10. Пользователь отказывается от продолжения ввода;
# 11. Python выводит в консоль список всех наименований товаров из своей структуры "Товары"
#   в следующем формате: “название”: [“компьютер”, “принтер”, “сканер”];
# 12. Python выводит в консоль список всех цен товаров из своей структуры "Товары"
#   в следующем формате: “цена”: [20000, 6000, 2000];
# 13. Python выводит в консоль список всех значений количества товаров из своей структуры "Товары"
#   в следующем формате:  “количество”: [5, 2, 7];
# 14. Python выводит в консоль список всех единиц измерения из своей структуры "Товары"
#   в следующем формате: “ед”: [“шт.”]
#
#
# Задачи:
# 1. Вывести в консоль запрос на ввод значений: номер товара, название товара, цена товара, количество товара, единица измерения;
# 2. Реализовать возможность множественного заполнения товарных позиций;
# 3. Реализовать следующую структуру размещения товарных позиций ("Товары"):
#   - в список разместить набор Кортежей
#   - в Кортеже разместить два значения, первое - номер товара, второе - набор характеристик (название товара, цена товара, количество товара, единица измерения);
# 4. Данные по каждой товарной позиции разместить в структуре "Товары";
# 5. Вывести в консоль содержимое структуры "Товары";
# 5. Получить все наименования из структуры "Товары";
# 6. Вывести в консоль список полученных наименований товаров в формате: “название”: [“компьютер”, “принтер”, “сканер”];
# 7. Получить все значения цен товара из структуры "Товары";
# 8. Вывести в консоль список цен по каждой товарной позиции в формате: “цена”: [20000, 6000, 2000];
# 9. Получить все значения количества товара из структуры "Товары";
# 10. Вывести в консоль список полученных значений количества товара по каждой товарной позиции в формате: “количество”: [5, 2, 7];
# 11. Получить список значений единиц измерения товаров из структуры "Товары";
# 12. Вывести в консоль список полученных единиц измерения (без повторов значений) в формате: “ед”: [“шт.”];
# 13. Завершить выполнение кода;
# .

def tovar_zapros():
    #tovar_param = ()
    tovar_number = int(input("Номер товара: "))
    tovar_name = str(input("Название товара: "))
    tovar_tcena= round(float(input("Цена товара: ")))
    tovar_kolich = round(float(input("Количество товара: "))) # Тест ValueError: could not convert string to float: '`12'
    tovar_edizm = str(input("Единица измерения: "))

    dict_param = {"Название товара":tovar_name,
                  "Цена товара":tovar_tcena,
                  "Количество товара":tovar_kolich,
                  "Единица измерения":tovar_edizm}
    tovar_param = (tovar_number, dict_param)

    return tovar_param

tovar_list = []
YNyes = ("yes","y","да","д")

while True:
    print("<>while True:<>")
    try:
        tovar_parametros = tovar_zapros()
        tovar_list.append(tovar_parametros)
        print(" ")
        YN = input("Добавить еще одну позицию? (Да \ нет)")
        if str(YN).lower() in YNyes:
            continue
        else:
            break

    except ValueError:
        print("Error ==>> ValueError")

        # Тест except ValueError:
        # <> while True: <>
        # Номер товара: 234
        # Название товара: wert
        # Цена товара: 24
        # Количество товара: шт
        # Error == >> ValueError

        # <> while True: <>
        # Номер товара: 2345
        # Название товара: wert
        # Цена товара: 345
        # Количество товара: 13
        # Единица измерения: шт
        #
        # Добавить еще одну позицию? (Да \ нет)


print(" ")
print("<>"*25)

print("[")
for k in tovar_list:
    print(k)
print("]")


# [
#       (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#       (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#       (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]

print("<>"*25)
print(" ")


prod_list = []
price_list = []
count_list = []
unit_list = set()

for count, prod in enumerate(tovar_list):
    prod_get = prod[1].get("Название товара")
    prod_list.append(prod_get)

    price_get = prod[1].get("Цена товара")
    price_list.append(price_get)

    count_get = prod[1].get("Количество товара")
    count_list.append(count_get)

    unit_get = prod[1].get("Единица измерения")
    unit_list.add(unit_get)

prod_srez = {"Название товара": prod_list}
print(prod_srez)

price_srez = {"Цена товара": price_list}
print(price_srez)

count_srez = {"Количество товара": count_list}
print(count_srez)

unit_srez = {"Единица измерения": unit_list}
print(unit_srez)


#
# <>while True:<>
# Номер товара: 453245
# Название товара: фылвоат
# Цена товара: 234
# Количество товара: 234
# Единица измерения: шт
#
# Добавить еще одну позицию? (Да \ нет)д
# <>while True:<>
# Номер товара: 41234
# Название товара: фывта
# Цена товара: 423
# Количество товара: 543
# Единица измерения: шт
#
# Добавить еще одну позицию? (Да \ нет)д
# <>while True:<>
# Номер товара: 6436
# Название товара: риващп
# Цена товара: 645
# Количество товара: 543
# Единица измерения: кг
#
# Добавить еще одну позицию? (Да \ нет)д
# <>while True:<>
# Номер товара: 52345
# Название товара: ывлоатп
# Цена товара: 534
# Количество товара: 54
# Единица измерения: шт
#
# Добавить еще одну позицию? (Да \ нет)д
# <>while True:<>
# Номер товара: 74576
# Название товара: щшрщшва
# Цена товара: 64
# Количество товара: 76
# Единица измерения: метр
#
# Добавить еще одну позицию? (Да \ нет)н
#
# <><><><><><><><><><><><><><><><><><><><><><><><><>
# [
# (453245, {'Название товара': 'фылвоат', 'Цена товара': 234, 'Количество товара': 234, 'Единица измерения': 'шт'})
# (41234, {'Название товара': 'фывта', 'Цена товара': 423, 'Количество товара': 543, 'Единица измерения': 'шт'})
# (6436, {'Название товара': 'риващп', 'Цена товара': 645, 'Количество товара': 543, 'Единица измерения': 'кг'})
# (52345, {'Название товара': 'ывлоатп', 'Цена товара': 534, 'Количество товара': 54, 'Единица измерения': 'шт'})
# (74576, {'Название товара': 'щшрщшва', 'Цена товара': 64, 'Количество товара': 76, 'Единица измерения': 'метр'})
# ]
# <><><><><><><><><><><><><><><><><><><><><><><><><>
#
# {'Название товара': ['фылвоат', 'фывта', 'риващп', 'ывлоатп', 'щшрщшва']}
# {'Цена товара': [234, 423, 645, 534, 64]}
# {'Количество товара': [234, 543, 543, 54, 76]}
# {'Единица измерения': {'шт', 'кг', 'метр'}}
#
# Process finished with exit code 0
